<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hexin.demo.mapper.LikeCountMapper">


    <insert id="insertLikeCount"  useGeneratedKeys="true" keyProperty="id">
        INSERT INTO `t_like_count`
        (
        <trim suffixOverrides=",">
                    <if test="id!=null">
                        `id`,
                    </if>
                    <if test="likedUserId!=null">
                        `liked_user_id`,
                    </if>
                    <if test="likedSubjectId!=null">
                        `liked_subject_id`,
                    </if>
                    <if test="likedType!=null">
                        `liked_type`,
                    </if>
                    <if test="likeTotal!=null">
                        `like_total`,
                    </if>
                    <if test="delFlag!=null">
                        `del_flag`,
                    </if>
                    <if test="createBy!=null">
                        `create_by`,
                    </if>
                    <if test="createTime!=null">
                        `create_time`,
                    </if>
                    <if test="updateBy!=null">
                        `update_by`,
                    </if>
                    <if test="updateTime!=null">
                        `update_time`,
                    </if>
        </trim>
        )
        VALUES
        (
        <trim suffixOverrides=",">
                <if test="id!=null">
                    #{id},
                </if>
                <if test="likedUserId!=null">
                    #{likedUserId},
                </if>
                <if test="likedSubjectId!=null">
                    #{likedSubjectId},
                </if>
                <if test="likedType!=null">
                    #{likedType},
                </if>
                <if test="likeTotal!=null">
                    #{likeTotal},
                </if>
                <if test="delFlag!=null">
                    #{delFlag},
                </if>
                <if test="createBy!=null">
                    #{createBy},
                </if>
                <if test="createTime!=null">
                    #{createTime},
                </if>
                <if test="updateBy!=null">
                    #{updateBy},
                </if>
                <if test="updateTime!=null">
                    #{updateTime},
                </if>
        </trim>
        )
    </insert>




    <update id="updateLikeCount">
        UPDATE `t_like_count`
        SET
        <trim suffixOverrides=",">
            <if test="likedUserId != null">
                `liked_user_id` = #{likedUserId},
            </if>
            <if test="likedSubjectId != null">
                `liked_subject_id` = #{likedSubjectId},
            </if>
            <if test="likedType != null and likedType!=''">
                `liked_type` = #{likedType},
            </if>
            <if test="likeTotal != null">
                `like_total` = #{likeTotal},
            </if>
            <if test="delFlag != null and delFlag!=''">
                `del_flag` = #{delFlag},
            </if>
            <if test="createBy != null and createBy!=''">
                `create_by` = #{createBy},
            </if>
            <if test="createTime != null">
                `create_time` = #{createTime},
            </if>
            <if test="updateBy != null and updateBy!=''">
                `update_by` = #{updateBy},
            </if>
            <if test="updateTime != null">
                `update_time` = #{updateTime},
            </if>
        </trim>
        WHERE
        <trim suffixOverrides="and">
                `id` = #{id} and
        </trim>
    </update>

    <update id="update">
        UPDATE `t_like_count`
        SET
        <trim suffixOverrides=",">
        <if test="set.likedUserId != null">
            `liked_user_id` = #{set.likedUserId},
        </if>
        <if test="set.likedSubjectId != null">
            `liked_subject_id` = #{set.likedSubjectId},
        </if>
        <if test="set.likedType != null and set.likedType!=''">
            `liked_type` = #{set.likedType},
        </if>
        <if test="set.likeTotal != null">
            `like_total` = #{set.likeTotal},
        </if>
        <if test="set.delFlag != null and set.delFlag!=''">
            `del_flag` = #{set.delFlag},
        </if>
        <if test="set.createBy != null and set.createBy!=''">
            `create_by` = #{set.createBy},
        </if>
        <if test="set.createTime != null">
            `create_time` = #{set.createTime},
        </if>
        <if test="set.updateBy != null and set.updateBy!=''">
            `update_by` = #{set.updateBy},
        </if>
        <if test="set.updateTime != null">
            `update_time` = #{set.updateTime},
        </if>
        </trim>
        <trim prefix="where" suffixOverrides="and | or">
                <if test="where.idList != null">
                    `id` in
                    <foreach collection="where.idList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test="where.idSt !=null">
                `id` >= #{where.idSt} and
            </if>
            <if test="where.idEd!=null">
                `id` &lt;= #{where.idEd} and
            </if>
                <if test="where.likedUserIdList != null">
                    `liked_user_id` in
                    <foreach collection="where.likedUserIdList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test="where.likedUserIdSt !=null">
                `liked_user_id` >= #{where.likedUserIdSt} and
            </if>
            <if test="where.likedUserIdEd!=null">
                `liked_user_id` &lt;= #{where.likedUserIdEd} and
            </if>
                <if test="where.likedSubjectIdList != null">
                    `liked_subject_id` in
                    <foreach collection="where.likedSubjectIdList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test="where.likedSubjectIdSt !=null">
                `liked_subject_id` >= #{where.likedSubjectIdSt} and
            </if>
            <if test="where.likedSubjectIdEd!=null">
                `liked_subject_id` &lt;= #{where.likedSubjectIdEd} and
            </if>
                <if test="where.likedTypeList != null">
                    `liked_type` in
                    <foreach collection="where.likedTypeList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test ="where.fuzzyLikedType!=null and where.fuzzyLikedType.size()>0">
                (
                <foreach collection="where.fuzzyLikedType"  separator="or" item="item">
                    `Liked_type` like concat('%',#{item},'%')
                </foreach>
                ) and
            </if>
            <if test ="where.rightFuzzyLikedType!=null and where.rightFuzzyLikedType.size()>0">
                (
                <foreach collection="where.rightFuzzyLikedType"  separator="or" item="item">
                    `Liked_type` like concat(#{item},'%')
                </foreach>
                ) and
            </if>
                <if test="where.likeTotalList != null">
                    `like_total` in
                    <foreach collection="where.likeTotalList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test="where.likeTotalSt !=null">
                `like_total` >= #{where.likeTotalSt} and
            </if>
            <if test="where.likeTotalEd!=null">
                `like_total` &lt;= #{where.likeTotalEd} and
            </if>
                <if test="where.delFlagList != null">
                    `del_flag` in
                    <foreach collection="where.delFlagList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test ="where.fuzzyDelFlag!=null and where.fuzzyDelFlag.size()>0">
                (
                <foreach collection="where.fuzzyDelFlag"  separator="or" item="item">
                    `Del_flag` like concat('%',#{item},'%')
                </foreach>
                ) and
            </if>
            <if test ="where.rightFuzzyDelFlag!=null and where.rightFuzzyDelFlag.size()>0">
                (
                <foreach collection="where.rightFuzzyDelFlag"  separator="or" item="item">
                    `Del_flag` like concat(#{item},'%')
                </foreach>
                ) and
            </if>
                <if test="where.createByList != null">
                    `create_by` in
                    <foreach collection="where.createByList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test ="where.fuzzyCreateBy!=null and where.fuzzyCreateBy.size()>0">
                (
                <foreach collection="where.fuzzyCreateBy"  separator="or" item="item">
                    `Create_by` like concat('%',#{item},'%')
                </foreach>
                ) and
            </if>
            <if test ="where.rightFuzzyCreateBy!=null and where.rightFuzzyCreateBy.size()>0">
                (
                <foreach collection="where.rightFuzzyCreateBy"  separator="or" item="item">
                    `Create_by` like concat(#{item},'%')
                </foreach>
                ) and
            </if>
                <if test="where.createTimeList != null">
                    `create_time` in
                    <foreach collection="where.createTimeList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test="where.createTimeSt !=null">
                `create_time` >= #{where.createTimeSt} and
            </if>
            <if test="where.createTimeEd!=null">
                `create_time` &lt;= #{where.createTimeEd} and
            </if>
                <if test="where.updateByList != null">
                    `update_by` in
                    <foreach collection="where.updateByList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test ="where.fuzzyUpdateBy!=null and where.fuzzyUpdateBy.size()>0">
                (
                <foreach collection="where.fuzzyUpdateBy"  separator="or" item="item">
                    `Update_by` like concat('%',#{item},'%')
                </foreach>
                ) and
            </if>
            <if test ="where.rightFuzzyUpdateBy!=null and where.rightFuzzyUpdateBy.size()>0">
                (
                <foreach collection="where.rightFuzzyUpdateBy"  separator="or" item="item">
                    `Update_by` like concat(#{item},'%')
                </foreach>
                ) and
            </if>
                <if test="where.updateTimeList != null">
                    `update_time` in
                    <foreach collection="where.updateTimeList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test="where.updateTimeSt !=null">
                `update_time` >= #{where.updateTimeSt} and
            </if>
            <if test="where.updateTimeEd!=null">
                `update_time` &lt;= #{where.updateTimeEd} and
            </if>
        </trim>
    </update>


    <resultMap type="com.hexin.demo.entity.LikeCount" id="LikeCountMap">
        <result property="id" column="id"/>
        <result property="likedUserId" column="liked_user_id"/>
        <result property="likedSubjectId" column="liked_subject_id"/>
        <result property="likedType" column="liked_type"/>
        <result property="likeTotal" column="like_total"/>
        <result property="delFlag" column="del_flag"/>
        <result property="createBy" column="create_by"/>
        <result property="createTime" column="create_time"/>
        <result property="updateBy" column="update_by"/>
        <result property="updateTime" column="update_time"/>
    </resultMap>


    <select id="queryLikeCount" resultMap="LikeCountMap">
        select
        *
        from `t_like_count`
        <where>
            <if test="id != null">
                `id` = #{id} and
            </if>
            <if test="likedUserId != null">
                `liked_user_id` = #{likedUserId} and
            </if>
            <if test="likedSubjectId != null">
                `liked_subject_id` = #{likedSubjectId} and
            </if>
            <if test="likedType != null and likedType!=''">
                `liked_type` = #{likedType}
            </if>
        </where>
    </select>

    <select id="queryLikeCountLimit1" resultMap="LikeCountMap">
        select
        <include refid="baseResult"></include>
        from  `t_like_count`
        <trim prefix="where" suffixOverrides="and | or">
            <if test="id != null">
                `id` = #{id} and
            </if>
            <if test="likedUserId != null">
                `liked_user_id` = #{likedUserId} and
            </if>
            <if test="likedSubjectId != null">
                `liked_subject_id` = #{likedSubjectId} and
            </if>
            <if test="likedType != null and likedType!=''">
                `liked_type` = #{likedType} and
            </if>
            <if test="likeTotal != null">
                `like_total` = #{likeTotal} and
            </if>
            <if test="delFlag != null and delFlag!=''">
                `del_flag` = #{delFlag} and
            </if>
            <if test="createBy != null and createBy!=''">
                `create_by` = #{createBy} and
            </if>
            <if test="createTime != null">
                `create_time` = #{createTime} and
            </if>
            <if test="updateBy != null and updateBy!=''">
                `update_by` = #{updateBy} and
            </if>
            <if test="updateTime != null">
                `update_time` = #{updateTime} and
            </if>
            <if test = "(_parameter instanceof .LikeCount$QueryBuilder) == true">
                    <if test="idList != null">
                        `id` in
                        <foreach collection="idList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test="idSt !=null">
                    `id` >= #{idSt} and
                </if>
                <if test="idEd!=null">
                    `id` &lt;= #{idEd} and
                </if>
                    <if test="likedUserIdList != null">
                        `liked_user_id` in
                        <foreach collection="likedUserIdList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test="likedUserIdSt !=null">
                    `liked_user_id` >= #{likedUserIdSt} and
                </if>
                <if test="likedUserIdEd!=null">
                    `liked_user_id` &lt;= #{likedUserIdEd} and
                </if>
                    <if test="likedSubjectIdList != null">
                        `liked_subject_id` in
                        <foreach collection="likedSubjectIdList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test="likedSubjectIdSt !=null">
                    `liked_subject_id` >= #{likedSubjectIdSt} and
                </if>
                <if test="likedSubjectIdEd!=null">
                    `liked_subject_id` &lt;= #{likedSubjectIdEd} and
                </if>
                    <if test="likedTypeList != null">
                        `liked_type` in
                        <foreach collection="likedTypeList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test ="fuzzyLikedType!=null and fuzzyLikedType.size()>0">
                    (
                    <foreach collection="fuzzyLikedType"  separator="or" item="item">
                        `Liked_type` like concat('%',#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test ="rightFuzzyLikedType!=null and rightFuzzyLikedType.size()>0">
                    (
                    <foreach collection="rightFuzzyLikedType"  separator="or" item="item">
                        `Liked_type` like concat(#{item},'%')
                    </foreach>
                    ) and
                </if>
                    <if test="likeTotalList != null">
                        `like_total` in
                        <foreach collection="likeTotalList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test="likeTotalSt !=null">
                    `like_total` >= #{likeTotalSt} and
                </if>
                <if test="likeTotalEd!=null">
                    `like_total` &lt;= #{likeTotalEd} and
                </if>
                    <if test="delFlagList != null">
                        `del_flag` in
                        <foreach collection="delFlagList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test ="fuzzyDelFlag!=null and fuzzyDelFlag.size()>0">
                    (
                    <foreach collection="fuzzyDelFlag"  separator="or" item="item">
                        `Del_flag` like concat('%',#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test ="rightFuzzyDelFlag!=null and rightFuzzyDelFlag.size()>0">
                    (
                    <foreach collection="rightFuzzyDelFlag"  separator="or" item="item">
                        `Del_flag` like concat(#{item},'%')
                    </foreach>
                    ) and
                </if>
                    <if test="createByList != null">
                        `create_by` in
                        <foreach collection="createByList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test ="fuzzyCreateBy!=null and fuzzyCreateBy.size()>0">
                    (
                    <foreach collection="fuzzyCreateBy"  separator="or" item="item">
                        `Create_by` like concat('%',#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test ="rightFuzzyCreateBy!=null and rightFuzzyCreateBy.size()>0">
                    (
                    <foreach collection="rightFuzzyCreateBy"  separator="or" item="item">
                        `Create_by` like concat(#{item},'%')
                    </foreach>
                    ) and
                </if>
                    <if test="createTimeList != null">
                        `create_time` in
                        <foreach collection="createTimeList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test="createTimeSt !=null">
                    `create_time` >= #{createTimeSt} and
                </if>
                <if test="createTimeEd!=null">
                    `create_time` &lt;= #{createTimeEd} and
                </if>
                    <if test="updateByList != null">
                        `update_by` in
                        <foreach collection="updateByList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test ="fuzzyUpdateBy!=null and fuzzyUpdateBy.size()>0">
                    (
                    <foreach collection="fuzzyUpdateBy"  separator="or" item="item">
                        `Update_by` like concat('%',#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test ="rightFuzzyUpdateBy!=null and rightFuzzyUpdateBy.size()>0">
                    (
                    <foreach collection="rightFuzzyUpdateBy"  separator="or" item="item">
                        `Update_by` like concat(#{item},'%')
                    </foreach>
                    ) and
                </if>
                    <if test="updateTimeList != null">
                        `update_time` in
                        <foreach collection="updateTimeList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test="updateTimeSt !=null">
                    `update_time` >= #{updateTimeSt} and
                </if>
                <if test="updateTimeEd!=null">
                    `update_time` &lt;= #{updateTimeEd} and
                </if>
            </if>
        </trim>
        limit 1
    </select>

    <sql id="allResult">
        <trim suffixOverrides=",">
        `id`,
        `liked_user_id`,
        `liked_subject_id`,
        `liked_type`,
        `like_total`,
        `del_flag`,
        `create_by`,
        `create_time`,
        `update_by`,
        `update_time`,
        </trim>
    </sql>



    <sql id="baseResult">
        <trim suffixOverrides=",">
            <if test = "(_parameter instanceof .LikeCount$QueryBuilder) == true">

                <if test="fetchFields==null">
                    <include refid="allResult"></include>
                </if>
                <if test="fetchFields!=null">
                    <if test="fetchFields.AllFields !=null">
                        <include refid="allResult"></include>
                    </if>
                    <if test="fetchFields.AllFields ==null and fetchFields.fetchFields==null and fetchFields.excludeFields==null and fetchFields.otherFields==null">
                        <include refid="allResult"></include>
                    </if>
                    <if test="fetchFields.AllFields==null and fetchFields.fetchFields!=null">
                    <if test="fetchFields.fetchFields.id==true">
                        `id`,
                    </if>
                    <if test="fetchFields.fetchFields.likedUserId==true">
                        `liked_user_id`,
                    </if>
                    <if test="fetchFields.fetchFields.likedSubjectId==true">
                        `liked_subject_id`,
                    </if>
                    <if test="fetchFields.fetchFields.likedType==true">
                        `liked_type`,
                    </if>
                    <if test="fetchFields.fetchFields.likeTotal==true">
                        `like_total`,
                    </if>
                    <if test="fetchFields.fetchFields.delFlag==true">
                        `del_flag`,
                    </if>
                    <if test="fetchFields.fetchFields.createBy==true">
                        `create_by`,
                    </if>
                    <if test="fetchFields.fetchFields.createTime==true">
                        `create_time`,
                    </if>
                    <if test="fetchFields.fetchFields.updateBy==true">
                        `update_by`,
                    </if>
                    <if test="fetchFields.fetchFields.updateTime==true">
                        `update_time`,
                    </if>
                    </if>
                    <if test="fetchFields.AllFields==null and fetchFields.excludeFields!=null">
                    <if test="fetchFields.excludeFields.id==null">
                        `id`,
                    </if>
                    <if test="fetchFields.excludeFields.likedUserId==null">
                        `liked_user_id`,
                    </if>
                    <if test="fetchFields.excludeFields.likedSubjectId==null">
                        `liked_subject_id`,
                    </if>
                    <if test="fetchFields.excludeFields.likedType==null">
                        `liked_type`,
                    </if>
                    <if test="fetchFields.excludeFields.likeTotal==null">
                        `like_total`,
                    </if>
                    <if test="fetchFields.excludeFields.delFlag==null">
                        `del_flag`,
                    </if>
                    <if test="fetchFields.excludeFields.createBy==null">
                        `create_by`,
                    </if>
                    <if test="fetchFields.excludeFields.createTime==null">
                        `create_time`,
                    </if>
                    <if test="fetchFields.excludeFields.updateBy==null">
                        `update_by`,
                    </if>
                    <if test="fetchFields.excludeFields.updateTime==null">
                        `update_time`,
                    </if>
                    </if>
                    <if test="fetchFields.otherFields!=null and fetchFields.otherFields.size>0">
                        <foreach collection="fetchFields.otherFields" index="index" item="item" separator=",">
                        `#{item}`
                        </foreach>
                    </if>
                </if>
            </if>
            <if test="(_parameter instanceof .LikeCount$QueryBuilder) == false" >
                <include refid="allResult"></include>
            </if>

        </trim>
    </sql>


</mapper>